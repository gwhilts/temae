/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any styles
 * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
 * file per style scope.
 *
 *= require foundation_and_overrides
 *= require_tree .
 *= require_self

 */

// Foundation Icons
@import 'foundation-icons';

// Main

#main {
  padding: 2rem;}

#page-title {
  font-size: 1.5rem;
  font-weight: bold;
  font-style: oblique;
  padding: 0 0 1.2rem;
}

// Off-Canvas Menu

.off-canvas-wrapper,
.off-canvas-wrapper-inner {
  height: 100%
}

// variables
$accordion-bg: #4d5158;
$accordion-sub-bg: #35383d;
$accordion-separator: #41444a;

// background for inbox menu item
#inbox-menu-item {
  background: $accordion-bg;
}

// background for main accordion items
.is-accordion-submenu-parent a {
  background: $accordion-bg;
}

// background for sub accordion items
.is-accordion-submenu a,
.is-accordion-submenu-parent a:hover,
#inbox-menu-item:hover {
  background: $accordion-sub-bg;
}

.is-accordion-submenu a:hover {
  background: $accordion-bg;
}

// creates classes for nested elements, sub-item-*
@for $i from 1 through 3 {
  .sublevel-#{$i} {
    text-indent: 0rem + $i;
  }
}

[data-accordion-menu] {
  a {
    color: #fff;
    // sets accodion item separator color
    box-shadow: inset 0 -1px $accordion-separator;
    
    &::after {
      // sets accodion arrow color and direction
      border-color: #fff transparent transparent;
    }
  }
}

[data-icon]:before {
  font-family: "foundation-icons";
  margin: 0 .5em 0 0;
}

[data-icon='project']:before {
  content: '\f128';
}

[data-icon='inbox']:before {
  content: '\f143';
}

[data-icon='errands']:before {
  content: '\f172';
}

[data-icon='home']:before {
  content: '\f15a';
}

[data-icon='github']:before {
  content: '\f1c9';
}

[data-icon='office']:before {
  content: '\f1fc';
}

[data-icon='email']:before {
  content: '\f16d';
}

[data-icon='shopping']:before {
  content: '\f1b1';
}

[data-icon='generic']:before {
  content: '\f168';
}

[data-icon='phone']:before {
  content: '\f1f8';
}

// logout button

#logout-button {
  margin: 0;
  font-variant: small-caps;
}

// title bar

.title-bar-title {
  color: #fff;
}

.title-bar {
  li {
    a {
      color: #fff;
      padding: 0.385rem 1rem;
    }
  }

  a:hover {
    color: #ccc;
  }
}

// Title Bar

#filter_menu.menu.submenu.is-dropdown-submenu {
  border: none; 
  background-color: #000;
  margin-left: 0.8rem;
  li {
    background-color: #000;
    text-align: left;
  }
}

.dropdown.menu > li.is-dropdown-submenu-parent > a::after {
  display: none;
}

#logout-button {
  margin-left: 2rem;
}
